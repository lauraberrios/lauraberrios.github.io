{"version":3,"sources":["webpack:///./src/pages/favoritegroups.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","React","Component","query","m","module","exports","require","default","StaticQueryContext","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ListLink","style","display","marginRight","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","css","site","siteMetadata","title","listStyle","float","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-favoritegroups-js-fe6a4303513cddbfdee9.js","sourcesContent":["import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => (\n  <Layout>\n    <h1>My favorite groups </h1> \n    <p>\n     - RED VELVET <br></br>\n     - EXO <br></br>\n     - LOONA <br></br>\n     - GIRLS GENERATION <br></br>\n     - KARA <br></br>\n     - GIRLS DAY <br></br>\n     - T-ARA <br></br>\n     - FROMIS_9 <br></br>\n     - APRIL <br></br>\n     - WJSN <br></br>\n     - OH MY GIRL <br></br>\n     - EXID <br></br>\n     - BLACKPINK <br></br>\n     - GFRIEND <br></br>\n     - CLC <br></br>\n     - SISTAR <br></br>\n     - (G)I-DLE <br></br>\n     - TWICE <br></br>\n     - DREAMCATCHER <br></br>\n     - and many more...\n    </p>\n  </Layout>\n)\n\nclass Application extends React.Component {\n  render() {\n    return (\n      <div className=\"application\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>My Title</title>\n          <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n        </Helmet>\n        ...\n      </div>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n}\n    render={data => (\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(2)};\n          padding-top: ${rhythm(1.5)};\n        `}\n      >\n        <Link to={`/`}>\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(2)};\n              display: inline-block;\n              font-style: normal;\n            `}\n          >\n            {data.site.siteMetadata.title}\n          </h3>\n        </Link>\n        <ul style={{ listStyle: `none`, float: `right` }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/favoritegroups/\">My Favorite Groups</ListLink>\n      </ul>\n\n\n        {children}\n      </div>\n    )}\n  />\n)","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}